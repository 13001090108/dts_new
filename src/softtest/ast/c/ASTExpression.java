/* Generated By:JJTree: Do not edit this line. ASTExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package softtest.ast.c;

import softtest.cfg.c.VexNode;
import softtest.domain.c.analysis.*;
import softtest.domain.c.interval.Domain;

public class ASTExpression extends AbstractExpression {
	public ASTExpression(int id) {
		super(id);
	}

	public ASTExpression(CParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. **/
	public Object jjtAccept(CParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public Domain getDomain(VexNode vex) {
		Domain ret = null;
		ExpressionVistorData expdata = new ExpressionVistorData();
		expdata.currentvex = vex;
		expdata.sideeffect = false;
		jjtAccept(new ExpressionValueVisitor(), expdata);
		if(expdata.value==null)
		{
			return null;
		}
		ret = expdata.value.getDomain(vex.getSymDomainset());
		return ret;
	}
}
/* JavaCC - OriginalChecksum=5c2e70ddcbb92c92dc62445cacdc9170 (do not edit this line) */
