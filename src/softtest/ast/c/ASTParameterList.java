/* Generated By:JJTree: Do not edit this line. ASTParameterList.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package softtest.ast.c;

import java.util.ArrayList;

import softtest.symboltable.c.Type.CType;

public class ASTParameterList extends SimpleNode {
	CType type = null;

	public ASTParameterList(int id) {
		super(id);
	}

	public ASTParameterList(CParser p, int id) {
		super(p, id);
	}

	public CType getType() {
		return type;
	}

	public void setType(CType type) {
		this.type = type;
	}

	/** Accept the visitor. **/
	public Object jjtAccept(CParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}
	
	public ArrayList<String> getIdentifiers() {
		ArrayList<String> list=new ArrayList<String>();
		for(int i=0;i<this.jjtGetNumChildren();i++){
			String identifier="";
			ASTParameterDeclaration p=(ASTParameterDeclaration)this.jjtGetChild(i);
			ASTDeclarator d=(ASTDeclarator)p.getFirstDirectChildOfType(ASTDeclarator.class);
			if(d!=null){
				identifier= d.getImage();
			}else{
				identifier=p.getIdentifier();
			}
			list.add(identifier);
		}
		return list;
	}
}
/* JavaCC - OriginalChecksum=9da9128fa8cb821ca48e3ee32b9ad19f (do not edit this line) */
