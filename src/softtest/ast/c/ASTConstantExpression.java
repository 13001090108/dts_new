/* Generated By:JJTree: Do not edit this line. ASTConstantExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package softtest.ast.c;

import softtest.domain.c.analysis.*;
import softtest.domain.c.interval.*;

public
class ASTConstantExpression extends AbstractExpression {
  public ASTConstantExpression(int id) {
    super(id);
  }

  public ASTConstantExpression(CParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(CParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public int getIntegerValue(){
	  //zys		2010.3.29:通过符号运算，处理如下情形：#define SIZE=80
	  //int a[SIZE+1];
	  ExpressionValueVisitor v=new ExpressionValueVisitor();
	  ExpressionVistorData data=new ExpressionVistorData();
	  try{
		  this.jjtAccept(v, data);
		  Domain domain=data.value.getDomain(null);
		  IntegerDomain i=(IntegerDomain)Domain.castToIntegerDomain(domain);
		  return (int)i.getMin();
	  }catch(Exception e){
		  return -1;
	  }
  }
}
/* JavaCC - OriginalChecksum=418564b211dc521e19bb4442be5ea598 (do not edit this line) */
